<?xml version="1.0" encoding="UTF-8"?>
<!--
    This is the parent POM used by all scireum and sirius projects.
    This will enforce a sane build process.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.scireum</groupId>
    <artifactId>sirius-parent</artifactId>
    <version>DEVELOPMENT-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!-- Overwrite this block if necessary -->
    <name>Sirius Parent</name>
    <description>Provides a parent pom for all Sirius modules</description>
    <url>https://www.sirius-lib.net</url>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>scireum</name>
            <email>info@scireum.de</email>
            <organization>scireum GmbH</organization>
            <organizationUrl>https://www.scireum.de</organizationUrl>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.release>23</maven.compiler.release>
        <!-- Highlight unchecked and deprecation warnings -->
        <maven.compiler.lint>-Xlint:-options,unchecked,deprecation</maven.compiler.lint>
        <!-- Break the build when warnings occur. 
             Consider to disable this in product builds which might need to live with deprecations -->
        <maven.compiler.warnings>-Werror</maven.compiler.warnings>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
        <build.number>${DRONE_BUILD_NUMBER}</build.number>
        <build.vcs.number>${DRONE_COMMIT}</build.vcs.number>

        <!-- Contains a copy of the effective version of the parent pom as it is referenced
             to load certain resources -->
        <!-- Do not use ${project.version} here, as it is overwritten by the child pom! -->
        <sirius.parent.version>DEVELOPMENT-SNAPSHOT</sirius.parent.version>

        <!-- Settings to control the scm owner -->
        <project.owner>scireum</project.owner>
        <project.repository>${project.artifactId}</project.repository>

        <!-- By default, we update the copyright to the sirius/scireum text -->
        <!-- As "real" companies also use this parent, the following can be set to exclude the enforces copyright -->
        <!-- <sirius.ideaExcludes>.idea/copyright/**</sirius.ideaExcludes> -->
        
        <plugin.maven-deploy-plugin.version>3.1.4</plugin.maven-deploy-plugin.version>
        <plugin.maven-assembly-plugin.version>3.7.1</plugin.maven-assembly-plugin.version>
        <plugin.maven-dependency-plugin.version>3.8.1</plugin.maven-dependency-plugin.version>

        <kotlin.version>2.1.0</kotlin.version>
        <kotlin.compiler.languageVersion>2.1</kotlin.compiler.languageVersion>
        <kotlin.compiler.apiVersion>2.1</kotlin.compiler.apiVersion>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <kotlin.compiler.jvmTarget>23</kotlin.compiler.jvmTarget>
    </properties>
    <repositories>
        <repository>
            <id>scireum-mvn</id>
            <url>https://mvn.scireum.com</url>
        </repository>
    </repositories>
    <distributionManagement>
        <repository>
            <id>scireum-mvn</id>
            <url>ftp://ftp.mvn.scireum.com/htdocs</url>
        </repository>
    </distributionManagement>

    <!-- Builds an SCM url for GitHub based on the owner and artifact id -->
    <scm>
        <connection>scm:git:git@github.com:${project.owner}/${project.repository}.git</connection>
        <developerConnection>scm:git:git@github.com:${project.owner}/${project.repository}.git</developerConnection>
        <url>git@github.com:${project.owner}/${project.repository}.git</url>
    </scm>

    <profiles>
        <!-- This profile performs the bulk part of the build. (Compiling, Tests, ...)
             It is deactivated for the parent itself, as there is nothing to compile -->
        <profile>
            <id>build</id>
            <activation>
                <file>
                    <missing>nobuild.txt</missing>
                </file>
            </activation>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <includes>
                            <include>**/*.conf</include>
                        </includes>
                    </resource>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>false</filtering>
                        <excludes>
                            <exclude>**/*.conf</exclude>
                        </excludes>
                    </resource>
                </resources>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                    </testResource>
                    <testResource>
                        <directory>docs</directory>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>3.4.2</version>
                        <configuration>
                            <excludes>
                                <exclude>**/*Test.*</exclude>
                                <exclude>**/*Spec.*</exclude>
                                <exclude>**/*Spec$*</exclude>
                                <exclude>**/*Test$*</exclude>
                                <exclude>**/test.conf</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>test-jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.3.1</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>


                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.5.2</version>
                        <configuration>
                            <groups>${test.included.groups}</groups>
                            <excludedGroups>${test.excluded.groups}</excludedGroups>
                        </configuration>
                    </plugin>

                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>groovyc</id>
                                <phase>test-compile</phase>
                                <configuration>
                                    <target>
                                        <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc">
                                            <classpath refid="maven.test.classpath"/>
                                        </taskdef>
                                        <mkdir dir="${project.build.testOutputDirectory}"/>
                                        <groovyc srcdir="${basedir}/src/test/java"
                                                 destdir="${project.build.testOutputDirectory}"
                                                 encoding="${project.build.sourceEncoding}">
                                            <classpath refid="maven.test.classpath"/>
                                        </groovyc>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.14.0</version>
                        <configuration>
                            <compilerVersion>${maven.compiler.source}</compilerVersion>
                            <fork>true</fork>
                            <release>${maven.compiler.release}</release>
                            <debug>true</debug>
                            <optimize>true</optimize>
                            <showDeprecation>true</showDeprecation>
                            <showWarnings>true</showWarnings>
                            <compilerArgs>
                                <arg>${maven.compiler.lint}</arg>
                                <arg>${maven.compiler.warnings}</arg>
                            </compilerArgs>
                            <excludes>
                                <exclude>**/package-info.java</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>compile</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>testCompile</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${plugin.maven-dependency-plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-plugin</artifactId>
                        <version>${kotlin.version}</version>

                        <executions>
                            <execution>
                                <id>test-compile</id>
                                <goals>
                                    <goal>test-compile</goal>
                                </goals>
                                <configuration>
                                    <sourceDirs>
                                        <sourceDir>${project.basedir}/src/test/java</sourceDir>
                                        <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                    </sourceDirs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- This profile deploys libraries to sonatype nexus -->
        <profile>
            <id>deploy</id>
            <activation>
                <file>
                    <missing>src/main/resources/application.conf</missing>
                </file>
            </activation>
            <build>
                <plugins>
                    <!-- We never use the classic maven deploy -->
                    <plugin>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <version>${plugin.maven-deploy-plugin.version}</version>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- This profile bundles applications so that they can be bundled into docker images -->
        <profile>
            <id>build-app</id>
            <activation>
                <file>
                    <exists>src/main/resources/application.conf</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${plugin.maven-assembly-plugin.version}</version>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>dir</descriptorRef>
                            </descriptorRefs>
                            <finalName>release</finalName>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.scireum</groupId>
                                <artifactId>sirius-parent</artifactId>
                                <version>${sirius.parent.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- This is exlusively used to create the resources jar for the parent pom. -->
        <profile>
            <id>build-parent</id>
            <activation>
                <file>
                    <exists>nobuild.txt</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${plugin.maven-assembly-plugin.version}</version>
                        <configuration>
                            <descriptors>
                                <descriptor>parent-jar.xml</descriptor>
                            </descriptors>
                            <finalName>${project.artifactId}-${project.version}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Updates the IntelliJ IDEA project if present -->
        <profile>
            <id>idea</id>
            <activation>
                <file>
                    <exists>.idea</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${plugin.maven-dependency-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.scireum</groupId>
                                            <artifactId>sirius-parent</artifactId>
                                            <version>${sirius.parent.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.basedir}</outputDirectory>
                                            <includes>.idea/**</includes>
                                            <excludes>${sirius.ideaExcludes}</excludes>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Updates the IntelliJ IDEA Project if present as parent project. -->
        <!-- Sometimes multiple artifacts are stored in one project... -->
        <profile>
            <id>idea-multi</id>
            <activation>
                <file>
                    <exists>../.idea</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${plugin.maven-dependency-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.scireum</groupId>
                                            <artifactId>sirius-parent</artifactId>
                                            <version>${sirius.parent.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.basedir}/..</outputDirectory>
                                            <includes>.idea/**</includes>
                                            <excludes>${sirius.ideaExcludes}</excludes>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
    <build>
        <plugins>
            <!-- We never use the classic maven deploy -->
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${plugin.maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>false</skip>
                </configuration>
            </plugin>
        </plugins>
        <extensions>
            <!-- Enabling the use of FTP -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ftp</artifactId>
                <version>3.5.3</version>
            </extension>
        </extensions>
    </build>

    <dependencies>
        <!-- JUnit5, versions provided using BOM -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.mockk</groupId>
            <artifactId>mockk-jvm</artifactId>
            <version>1.13.13</version>
            <scope>test</scope>
        </dependency>

        <!-- For legacy junit4 and scenario support. Include JUNIT-Toolbox for testing -->
        <dependency>
            <groupId>com.googlecode.junit-toolbox</groupId>
            <artifactId>junit-toolbox</artifactId>
            <version>2.4</version>
            <scope>test</scope>
        </dependency>

        <!-- Include Spock for testing -->
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>1.3-groovy-2.4</version>
            <scope>test</scope>
        </dependency>

        <!-- Include bytebuddy and objenesis for advanced mocking at spockframework -->
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>1.15.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.objenesis</groupId>
            <artifactId>objenesis</artifactId>
            <version>3.4</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.11.3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>2.18.2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>
